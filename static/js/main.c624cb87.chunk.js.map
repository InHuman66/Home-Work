{"version":3,"sources":["Component/Greeting/Greeting.module.css","Component/Tusks/Item/Item.module.css","Component/common/MyButton/MyButton.module.css","Component/AddMassage/Massage/Massage.module.css","App.module.css","Component/Tusks/Tusk.module.css","Component/common/MyInput/MyInput.module.css","Recors/avatar7.png","Component/AddMassage/Massage/Massage.tsx","Component/AddMassage/AddMassage.tsx","Component/Tusks/Item/Item.tsx","Component/common/MyButton/MyButton.tsx","Component/Tusks/Tusk.tsx","Component/common/MyInput/MyInput.tsx","Component/Greeting/Greeting.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Massage","props","className","classes","massage","src","Avatar","name","time","txt","AddMassage","useState","id","map","date","key","Item","styleForPrior","hight","prior","low","medium","tusk","onClick","removeTusk","MyButton","styleForButton","default","type","delete","escape","select","disabled","click","text","Tusk","priority","setTxt","newDate","filter","t","setFilter","chengeFilteer","filterData","position","item","buttons","priorityBlock","MyInput","styleForInput","error","style","placeholder","placeHolderValue","onKeyPress","e","charCode","pressEnter","onChange","change","currentTarget","value","Greeting","greetData","setGreetData","addAlert","setError","errorTxt","setErrorSymbol","normalSymbol","alert","normalTxt","test","setStyleForInput","errorSymbol","setDisabledForButton","styleForErrorEmpti","styleForErrorSymbol","disabledForButton","greet","positionError","App","positionAll","positionContent","greetBlock","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.c624cb87.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"greet\":\"Greeting_greet__2aple\",\"positionError\":\"Greeting_positionError__3UOpZ\",\"normalTxt\":\"Greeting_normalTxt__1hcdu\",\"errorTxt\":\"Greeting_errorTxt__2ugG8\",\"errorSymbol\":\"Greeting_errorSymbol__1jfSY\",\"normalSymbol\":\"Greeting_normalSymbol__LCjyQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tusk\":\"Item_tusk__qXNSG\",\"low\":\"Item_low__2SVds\",\"hight\":\"Item_hight__27fR-\",\"medium\":\"Item_medium__3timd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"MyButton_default__2eevT\",\"delete\":\"MyButton_delete__2i5xI\",\"escape\":\"MyButton_escape__1VjNO\",\"select\":\"MyButton_select__379o_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"massage\":\"Massage_massage__2B5Qt\",\"name\":\"Massage_name__2TTHb\",\"time\":\"Massage_time__VxX9a\",\"txt\":\"Massage_txt__2dNYj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"positionContent\":\"App_positionContent__9DguD\",\"greetBlock\":\"App_greetBlock__sglP_\",\"positionAll\":\"App_positionAll__2Z9er\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"position\":\"Tusk_position__34J4j\",\"buttons\":\"Tusk_buttons__9fDIr\",\"priorityBlock\":\"Tusk_priorityBlock__26m2c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"MyInput_default__1-7pd\",\"error\":\"MyInput_error__2mjR0\"};","module.exports = __webpack_public_path__ + \"static/media/avatar7.1ee966d6.png\";","import React from 'react';\r\nimport classes from \"./Massage.module.css\";\r\nimport Avatar from '../../../Recors/avatar7.png'\r\n\r\nconst Massage: React.FC<{time:string, name:string, txt:string,}>=(props)=> {\r\n  return (\r\n    <div className={classes.massage + ' row'}>\r\n      <img src={Avatar}/>\r\n      <p className={classes.name}>{props.name}</p>\r\n      <p className={classes.time}>{props.time}</p>\r\n      <div className={classes.txt + ' col-11 offset-1'}>\r\n        <p>{props.txt}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Massage;\r\n","import React, {useState} from 'react';\r\nimport classes from \"./AddMassage.module.css\";\r\nimport Massage from \"./Massage/Massage\";\r\n\r\nconst AddMassage=()=> {\r\n    let [txt]= useState([\r\n        {txt:'Good' , time:'12:00' , name: 'Sanchek', id: 1,},\r\n        {txt:'test txt' , time:'12:00' , name: 'Sanchek', id: 2,},\r\n        {txt:'....' , time:'12:00' , name: 'Sanchek', id: 3,},\r\n        {txt:'Hello' , time:'12:00' , name: 'Sanchek', id: 4,},\r\n    ]);\r\n  return (\r\n    <div className={'col-3'}>\r\n        {txt.map((date)=><Massage key={date.id} time={date.time} name={date.name} txt={date.txt}/>)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddMassage;\r\n","import React from 'react';\r\nimport classes from \"./Item.module.css\";\r\n\r\n\r\ntype Mass ={\r\n    txt: string\r\n    prior: string\r\n    id: number\r\n    removeTusk: (id:number)=> void\r\n}\r\n\r\nconst Item:React.FC<Mass>=(props)=> {\r\n    let styleForPrior = classes.hight;\r\n    if (props.prior === 'hight'){\r\n        styleForPrior = classes.hight\r\n    }else if(props.prior === 'low'){\r\n        styleForPrior = classes.low\r\n    }else if(props.prior === 'medium'){\r\n        styleForPrior = classes.medium\r\n    }\r\n  return (\r\n    <div className={classes.tusk}>\r\n        <p>{props.txt}:</p>\r\n        <p className={styleForPrior}>Priority: {props.prior}</p>\r\n        <button onClick={()=>{props.removeTusk(props.id)}}>Здать</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import React from 'react';\r\nimport classes from \"./MyButton.module.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\ntype TypeProps ={\r\n  text: string\r\n  click: ()=>void\r\n  type?: \"delete\" | \"default\" | \"escape\" | \"select\"\r\n  disabled?: boolean\r\n}\r\n\r\nconst MyButton=(props:TypeProps)=> {\r\n  let styleForButton = classes.default\r\n  if(props.type === \"delete\"){\r\n    styleForButton = classes.delete\r\n  }else if(props.type ===\"default\" ){\r\n    styleForButton = classes.default\r\n  }else if(props.type === \"escape\"){\r\n    styleForButton = classes.escape\r\n  }else if(props.type === \"select\"){\r\n    styleForButton = classes.select\r\n  }\r\n  return (\r\n    <button disabled={props.disabled} className={styleForButton} onClick={props.click}>{props.text}</button>\r\n  );\r\n};\r\n\r\nexport default MyButton;\r\n","import React, {useState} from 'react';\r\nimport classes from \"./Tusk.module.css\";\r\nimport Item from \"./Item/Item\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport MyButton from \"../common/MyButton/MyButton\";\r\nexport type FilterType =  'all'|'hight'|'medium'|'low';\r\n\r\nconst Tusk=()=> {\r\n    let [txt, setTxt]= useState([\r\n        {tusk:'работа' , priority:'hight' , id: 1,},\r\n        {tusk:'залипать в монитор по 5 минут' , priority:'low' , id: 2,},\r\n        {tusk:'игры' , priority:'hight' , id: 3,},\r\n        {tusk:'спать' , priority:'low' , id: 4,},\r\n        {tusk:'чудить' , priority:'medium' , id: 5,},\r\n    ]);\r\n    let  removeTusk = (id:number)=>{\r\n        let newDate = txt.filter(t => t.id != id);\r\n        setTxt(newDate);\r\n    }\r\n    let [filter, setFilter]=useState<FilterType>('all');\r\n    let chengeFilteer =(filter:FilterType)=>{\r\n      setFilter(filter)\r\n    };\r\n    let OnClickAll =()=>{chengeFilteer('all')};\r\n    let OnClickLow =()=>{chengeFilteer('low')};\r\n    let OnClickMedium =()=>{chengeFilteer('medium')};\r\n    let OnClickHight =()=>{chengeFilteer('hight')};\r\n    let filterData = txt;\r\n    if (filter === \"low\"){\r\n        filterData = txt.filter(t => t.priority === 'low')\r\n    }\r\n    if (filter === \"hight\"){\r\n        filterData = txt.filter(t => t.priority === 'hight')\r\n    }\r\n    if (filter === \"medium\"){\r\n        filterData = txt.filter(t => t.priority === 'medium')\r\n    }\r\n  return (\r\n    <div className={classes.position + ' row'}>\r\n        <h2 className={'col-12 text-center'}>Задачи</h2>\r\n        <div>\r\n            {filterData.map((item)=><Item key={item.id}  removeTusk={removeTusk} txt={item.tusk} prior={item.priority} id={item.id}/>)}\r\n            <div className={classes.buttons}>\r\n                <div className={classes.priorityBlock}>\r\n                    <p>Choose priority:</p>\r\n                    <MyButton text={'High'} click={OnClickHight}/>\r\n                    <MyButton text={'Medium'} click={OnClickMedium}/>\r\n                    <MyButton text={'Low'} click={OnClickLow}/>\r\n                    <MyButton text={'All'} click={OnClickAll}/>\r\n                </div>\r\n                <div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tusk;\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport classes from \"./MyInput.module.css\";\r\n\r\ntype TypeMyInput = {\r\n    change: (text: string) => void\r\n    value: string\r\n    pressEnter: () => void\r\n    placeHolderValue?:string\r\n    style?: string\r\n}\r\n\r\n\r\nconst MyInput = (props: TypeMyInput) => {\r\n    let styleForInput = classes.error\r\n    if (props.style === 'default'){\r\n        styleForInput = classes.default\r\n    }else if (props.style === 'error'){\r\n        styleForInput = classes.error\r\n    }\r\n\r\n    let OnChenge = (e: React.FormEvent<HTMLInputElement>) => {\r\n        props.change(e.currentTarget.value)\r\n    };\r\n\r\n    let OnPressEnter = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.charCode === 13) {\r\n            props.pressEnter();\r\n        }\r\n    }\r\n    return (\r\n        <input\r\n            className={styleForInput}\r\n            placeholder={props.placeHolderValue}\r\n            onKeyPress={OnPressEnter}\r\n            onChange={OnChenge}\r\n            value={props.value}\r\n        />\r\n    );\r\n};\r\n\r\nexport default MyInput;\r\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport  classes from './Greeting.module.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport MyInput from \"../common/MyInput/MyInput\";\r\nimport MyButton from \"../common/MyButton/MyButton\";\r\n\r\nconst Greeting=()=> {\r\n    let [greetData, setGreetData] = useState('');\r\n    let addNewTxtInput =(e:string)=>{\r\n        setGreetData(e)\r\n        test(e)\r\n\r\n    }\r\n    let onKeyPress =()=>{\r\n            addAlert();\r\n    }\r\n    let addAlert = ()=>{\r\n        if (greetData === ''){\r\n            setError(classes.errorTxt);\r\n            setErrorSymbol(classes.normalSymbol)\r\n        }\r\n        if(greetData !== ''){\r\n            alert(greetData)\r\n            setError(classes.normalTxt);\r\n        }\r\n    }\r\n    let test =(e:string)=>{\r\n        if (/[@?,.\"%$#!&*()+0-9]/.test(e)){\r\n            setStyleForInput('error')\r\n            setErrorSymbol(classes.errorSymbol)\r\n            setDisabledForButton(true)\r\n        }else{\r\n            setError(classes.normalTxt);\r\n            setStyleForInput('default')\r\n            setErrorSymbol(classes.normalSymbol)\r\n            setDisabledForButton(false)\r\n        }\r\n    };\r\n    let [styleForErrorEmpti, setError]= useState(classes.normalTxt);\r\n    let [styleForErrorSymbol, setErrorSymbol]= useState(classes.normalSymbol);\r\n    let [styleForInput, setStyleForInput] = useState('default')\r\n    let [disabledForButton, setDisabledForButton] = useState(false)\r\n  return (\r\n    <div>\r\n        <h1>Ну давай поздороваемся</h1>\r\n        <div className={'row'}>\r\n            <div className={classes.greet}>\r\n                {/*<button onClick={addAlert}>to greet</button>*/}\r\n                <MyButton disabled={disabledForButton} text={'to greet'} click={addAlert}/>\r\n                <MyInput\r\n                    style={styleForInput}\r\n                    placeHolderValue={'Давай своё имя братан'}\r\n                    change={addNewTxtInput}\r\n                    value={greetData}\r\n                    pressEnter={onKeyPress}\r\n                />\r\n            </div>\r\n            <div className={classes.positionError}>\r\n                <p className={styleForErrorEmpti}> *Строка не может быть пустой</p>\r\n                <p className={styleForErrorSymbol}> *Строка не может содержать цифры, cимволы:@, ., \"</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Greeting;\r\n","import React, {useState} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport AddMassage from \"./Component/AddMassage/AddMassage\";\r\nimport classes from './App.module.css';\r\nimport Tusk from \"./Component/Tusks/Tusk\";\r\nimport Greeting from \"./Component/Greeting/Greeting\";\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className={classes.positionAll}>\r\n      <div className={classes.positionContent + ' container'}>\r\n        <div className={'row'}>\r\n                <AddMassage/>\r\n                <Tusk/>\r\n\r\n        </div>\r\n        <div className={classes.greetBlock}>\r\n            <Greeting/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}